"""
    商品零售购物篮分析-Apriori算法:
        案例情景:
            闪光文具店工作人员发现顾客购买便利贴时, 很大程度也会购买中性笔, 除此之外, 还有很多文具有购买关联性
            为增加销量以获取更多的利润, 店长建议对顾客的购买行为进行分析
        购物篮分析:
            是关联分析的一种重要应用, 通过顾客在一次购买行为中放入购物篮的不同商品之间的关联, 研究客户的购买习惯, 从而辅助零售企业制定营销策略
            作用:
                1. 协助制定商品的捆绑销售策略; 比如: 规划附属商品降价销售, 以便刺激主体商品销售
                2. 可以指导商品的摆放; 比如: 经常同时购买的商品可以摆得近一点, 以便刺激这些商品一起销售
            分析步骤:
                1. 设置最小支持度, 最小置信度, 最小提升度
                2. 调用 apriori() 函数, 获取强关联规则
                3. 对支持度或置信度较大的强关联规则进行分析
        Apriori算法三个重要概念:
            支持度(X -> Y): 表示同时购买X, Y的订单数占总订单数的比例, 计算方式为:
                支持度(X -> Y) = {x,y}购买次数 / 订单总数
            置信度(X -> Y): 表示购买商品 X 的订单中同时购买商品 Y 的概率, 计算方式为:
                置信度(X -> Y) = {x,y}购买次数 / 包含商品 X 的订单数
            提升度(X -> Y): 表示购买商品时, 商品X, Y的相关性, 计算方式为:
                提升度(X -> Y) = {x,y}购买次数 * 订单总数 / 包含商品 X 的订单数 * 包含商品 Y 的订单数
                提升度 > 1: 商品 X 买得越多, Y 也会买得越多
                提升度 = 1: 着商品 X 和 Y 之间没有关系
                提升度 < 1: 购买 X 反而会减少 Y 的销量
"""

import pandas as pd

if __name__ == '__main__':
    # 获取目标数据
    dataFrame = pd.read_csv(filepath_or_buffer="./文具市场购物篮案例练习/工作/StationeryOrder.csv", sep=",",
                            encoding='gbk', engine="python")
    # 查看前 10 行数据
    print(dataFrame.head(10))
    # 查看最后 10 行数据
    print(dataFrame.tail(10))
    # 查看数据基本信息
    print(dataFrame.info())
